{"version":3,"sources":["webpack/bootstrap cd3d23091ce451940072","./frontend/twitter.js","./frontend/follow_toggle.js","./frontend/api_util.js","./frontend/users_search.js","./frontend/tweet_compose.js","./frontend/infinite_tweets.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;AACA,sBAAqB,GAAG;AACxB;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA,sBAAqB,GAAG;AACxB;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA,yBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA,oDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;AC/CA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,QAAQ;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA0D,kCAAkC;AAC5F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,qBAAoB,iBAAiB;AACrC;AACA,iCAAgC,iBAAiB;AACjD,oBAAmB,uBAAuB;AAC1C;AACA,yBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA,wCAAuC,gBAAgB;AACvD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;;AAIA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd3d23091ce451940072","const FollowToggle = require('./follow_toggle.js');\nconst UsersSearch = require('./users_search.js');\nconst TweetCompose = require('./tweet_compose.js');\nconst InfiniteTweets = require('./infinite_tweets.js');\n\n$(() => $('button.follow-toggle').each( (i, el) => new FollowToggle($(el)) ));\n$(() => $('nav.users-search').each( (i, el) => new UsersSearch($(el)) ));\n$(() => $('form.tweet-compose').each( (i, el) => new TweetCompose($(el)) ));\n$(() => $('div.infinite-tweets').each( (i, el) => new InfiniteTweets($(el)) ));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/twitter.js\n// module id = 0\n// module chunks = 0","const APIUtil = require('./api_util.js');\n\nclass FollowToggle {\n  constructor($el) {\n    this.user_id = $el.data(\"user-id\");\n    this.follow_state = $el.data(\"initial-follow-state\") ? 'followed' : 'unfollowed';\n    this.$el = $el;\n    this.$el.click(this.handleClick());\n    this.render();\n  }\n\n  render() {\n    this.$el.text(this.follow_state === 'followed' ? \"Unfollow\" : \"Follow\");\n  }\n\n  handleClick (){\n    return (event) => {\n      this.$el.attr(\"disabled\", true);\n\n      event.preventDefault();\n\n      if (this.follow_state === 'unfollowed') {\n        APIUtil.followUser(this.user_id)\n          .then(this.toggle())\n          .fail((messg) => console.log(messg));\n      }else {\n        APIUtil.unfollowUser(this.user_id)\n          .then(this.toggle())\n          .fail((messg) => console.log(messg));\n      }\n    };\n  }\n\n  toggle () {\n    return () => {\n      this.follow_state = (this.follow_state === 'followed' ? \"unfollowed\" : \"followed\");\n      this.$el.attr(\"disabled\", false);\n      this.render();\n    };\n  }\n}\n\nmodule.exports = FollowToggle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/follow_toggle.js\n// module id = 1\n// module chunks = 0","const APIUtil = {\n  followUser: id => {\n    return $.ajax({\n      url: `/users/${id}/follow`,\n      method: 'post',\n      dataType: 'json'\n    });\n  },\n\n  unfollowUser: id => {\n    return $.ajax({\n      url: `/users/${id}/follow`,\n      method: 'delete',\n      dataType: 'json'\n    });\n  },\n\n  searchUsers: (queryVal, success) => {\n    let data = `query=${queryVal}`;\n    return $.ajax({\n      url: '/users/search',\n      method: 'get',\n      dataType: 'json',\n      data: data\n    }).then(success).fail((msg) => console.log(msg));\n  },\n\n  createTweet: (data) => {\n    return $.ajax({\n      url: `/tweets`,\n      method: 'post',\n      dataType: 'json',\n      data: data\n    });\n  },\n\n  feed: (max_created_at) =>{\n    let data = (max_created_at ? `max_created_at=${max_created_at}` : \"\");\n    return $.ajax({\n      url: \"/feed\",\n      method: \"get\",\n      dataType: \"json\",\n      data: data\n    });\n  }\n};\n\nmodule.exports = APIUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/api_util.js\n// module id = 2\n// module chunks = 0","const APIUtil = require('./api_util.js');\nconst FollowToggle = require('./follow_toggle.js');\n\nclass UsersSearch {\n  constructor($el) {\n    this.$el = $el;\n    this.input = $el.find('input');\n\n    this.ul = $el.find('ul');\n    this.input.on(\"input\", this.handleInput());\n  }\n\n  handleInput() {\n    return (event) => {\n      APIUtil.searchUsers(this.input.val(), this.renderResults());\n    };\n  }\n\n  renderResults() {\n    return (results) => {\n      this.ul.empty();\n      results.forEach((user) => {\n        let $li = $('<li>');\n\n        let $a = $('<a>');\n        $a.attr('href', `/users/${user.id}`);\n        $a.text(user.username);\n\n        let $button = $('<button>');\n        $button.data(\"user-id\", user.id);\n        $button.data(\"initial-follow-state\", user.followed);\n        new FollowToggle($button);\n\n        $li.append($a);\n        $li.append($button);\n        this.ul.append($li);\n      });\n    };\n  }\n}\n\nmodule.exports= UsersSearch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/users_search.js\n// module id = 3\n// module chunks = 0","const APIUtil = require('./api_util.js');\n\nclass TweetCompose {\n  constructor($el) {\n    this.$el = $el;\n    $el.submit(this.submit());\n    this.$ul = $(this.$el.data(\"tweets-ul\"));\n    this.$textarea = this.$el.find('textarea');\n    this.$textarea.attr(\"maxlength\", 140);\n    this.$textarea.on(\"input\", this.charsLeft());\n\n    $('a.add-mentioned-user').on(\"click\", this.addMentionedUser());\n    $('div.mentioned-users').on(\"click\", \"a.remove-mentioned-user\", this.removeMentionedUser());\n  }\n\n  addMentionedUser() {\n    return (event) => {\n      $('div.mentioned-users').append(this.$el.find('script').html());\n      return false;\n    };\n  }\n\n  removeMentionedUser(){\n    return (event) => {\n      $(event.target).parent().remove();\n      return false;\n    };\n  }\n\n  charsLeft() {\n    return () => {\n      $('.chars-left').text(`Number of characters left: ${140 - this.$textarea.val().length}`);\n    };\n  }\n\n  submit (){\n    return (event) => {\n      event.preventDefault();\n      APIUtil.createTweet(this.$el.serializeJSON())\n        .then(this.handleSuccess())\n        .fail((msg) => console.log(msg));\n      this.$el.find(':input').attr(\"disabled\", true);\n    };\n  }\n\n  handleSuccess() {\n    return (newTweet) => {\n      // call something\n      $( document ).trigger(\"insert-tweet\", [newTweet]);\n      this.clearInput();\n    };\n  }\n\n  clearInput (){\n      this.$el.find(':input').attr(\"disabled\", false);\n      this.$el.find('.mentioned-users').empty();\n      this.$el.trigger(\"reset\");\n  }\n}\n\nmodule.exports = TweetCompose;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/tweet_compose.js\n// module id = 4\n// module chunks = 0","const APIUtil = require('./api_util.js');\n\nclass InfiniteTweets {\n  constructor($el) {\n    this.$el = $el;\n    $(\"a.fetch-more\").on(\"click\", this.fetchTweets());\n    this.maxCreatedAt = null;\n    $( document ).on( \"insert-tweet\", this.prependTweet());\n    $(\"a.fetch-more\").trigger(\"click\");\n  }\n\n  prependTweet() {\n    return (event, tweet) => {\n      this.$el.children('ul').prepend(this.tweetItem(tweet));\n    };\n  }\n\n  fetchTweets(){\n    return (event) => {\n      console.log(\"Fetching More\");\n      let lastTweet = this.$el.find(\"ul li:last\");\n      APIUtil.feed(this.maxCreatedAt)\n        .then(this.insertTweets())\n        .fail((msg) => console.log(msg));\n        return false;\n    };\n\n  }\n\n  insertTweets(){\n    return (tweets)=> {\n      tweets.forEach( (tweet) =>{\n        this.$el.children('ul').append(this.tweetItem(tweet));\n      });\n      if (tweets.length < 10){\n        $(\"a.fetch-more\").remove();\n      }\n      this.maxCreatedAt = tweets[tweets.length - 1].created_at;\n    };\n  }\n\n\n  tweetItem (newTweet){\n      let $li = $('<li>');\n      $li.append(`${newTweet.content} -- `);\n      let $a = $('<a>');\n      $a.attr(\"href\", `/users/${newTweet.user_id}`);\n      $a.append(`${newTweet.user.username}`);\n      $li.append($a);\n      $li.append(` -- ${newTweet.created_at}`);\n      if(newTweet.mentions.length > 0){\n        let $subul = $('<ul>');\n        newTweet.mentions.forEach((mention) => {\n          let $mentionli = $('<li>');\n          let $suba = $('<a>');\n          $suba.attr(\"href\", `/users/${mention.user_id}`);\n          $suba.append(mention.user.username);\n          $mentionli.append($suba);\n          $subul.append($mentionli);\n        });\n        $li.append($subul);\n      }\n    return $li;\n  }\n\n\n\n}\n\nmodule.exports = InfiniteTweets;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/infinite_tweets.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}